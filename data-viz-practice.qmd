---
title: "data-vis-practice"
format: html
editor_options: 
  chunk_output_type: console
---
```{r}
# General use packages:
library(tidyverse)
library(here)
library(janitor)

# Specifically for plots:
library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(ggExtra)
library(ggbeeswarm)

# And for another dataset we'll explore:
library(gapminder)

# Spatial
library(sf)
```

date: data collection date
scientific_name: lizard scientific name
common_name: lizard common name
site: research site code
sex: lizard sex (m = male; f = female; j = juvenile)
sv_length: snout-vent length (millimeters)
total_length: body length (millimeters)
toe_num: toe mark number
weight: body weight (grams)
tail: tail condition (b = broken; w = whole)



```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))
```

```{r}
# ggplot essential pieces, 3 ways (that do the same thing):

# Like this: 
ggplot(data = lizards, aes(x = total_length, y = weight)) + # That's 1 & 2
  geom_point() # That's 3

# Or, alternatively:
ggplot(data = lizards) +
  geom_point(aes(x = total_length, y = weight))

# Or another way:
ggplot() +
  geom_point(data = lizards, aes(x = total_length, y = weight))
```

```{r}
ggplot(data=lizards,aes(x=total_length)) + geom_histogram()
```

```{r}
ggplot(data=lizards, aes(y=common_name, x=weight)) + geom_jitter()
```

```{r}
ggplot(data=lizards, aes(x=weight)) + geom_histogram(color="orange",
                                                     fill="purple",
                                                     size=2,
                                                     linetype="dotted")
```

```{r}
ggplot(data=lizards, aes(x=total_length, y=weight)) + geom_point(color="coral3",
                                                                 fill="#3E92CC",
                                                                 shape=22,
                                                                 size=3,
                                                                 alpha=0.4)
```

```{r}
ggplot(data=lizards, aes(x=total_length,y=weight))+geom_point(aes(color=common_name,
                                                                  size=total_length),
                                                              alpha=0.5) + 
  scale_color_brewer(palette = "Set3") #changes the default colour to a palette
#+ scale_color_discrete(type= c("#3E92CC","color2", "etc")) , to pick your own colours
```

```{r}
ggplot(data=lizards, aes(x=total_length,y=weight))+geom_jitter(aes(color=common_name)) +
  theme_bw() # black line around the box
```

```{r}
ggplot(data=lizards, aes(x=total_length,y=weight))+geom_point(aes(color=common_name)) +
  labs(x="Total Length (mm)",
       y="Weight (g)",
       title="Lizard Size")
```


```{r}
ggplot(data=lizards, aes(x=total_length,y=weight))+geom_point() +
  facet_wrap(~common_name,ncol=3,scales="free")+ labs(x="Total Length (mm)",
       y="Weight (g)",
       title="Lizard Size")
```


```{r}
ggplot(data=lizards, aes(x=total_length,y=weight))+
  geom_point(aes(color=common_name,
             shape=common_name),size=2) + 
  theme_minimal() +
  labs(x="Total Length (mm)",
       y="Weight (g)",
       title="Lizard Size") +
  facet_wrap(~common_name)

```

```{r}
ggplot(data=lizards, aes(x=total_length,y=weight))+
  geom_point()+scale_x_continuous(breaks=c(0,250,500),#setting the xaxis min-max and the breaks
                                  limits=c(0,500))+
  scale_y_continuous(breaks=seq(from=0,to=70, by=10),#setting the yaxis min-max and the breaks
                                  limits=c(0,70))+theme_light()
```

```{r}
lizards_counts<-lizards %>%
  mutate(date=lubridate::mdy(date)) %>%
  count(date)

ggplot(data=lizards_counts, aes(x=date, y=n)) + geom_line()+
  scale_x_date(breaks=scales::breaks_width("3 years"), labels=scales::label_date("'%y"))
```
```{r}
ggplot(data=lizards, aes(x=total_length, y=weight)) + 
  geom_point(aes(color=weight))+
  scale_color_steps(low="red",high="black") #color scale 
 # scale_color_gradient(colors=c("orange","red","purple","navy","black"))
```


```{r}
p<-ggplot(data=lizards, aes(x=total_length, y=weight))+geom_point()

p+theme(panel.grid.minor =element_blank(),
        panel.grid.major = element_line(color="red"),
        plot.background = element_rect(fill="pink"),
        text=element_text(size=12, family = "serif"),
        axis.text.x = element_text(color = "blue"),
        axis.text.y=element_text(color="green"),
        panel.background=element_rect(color="purple",fill="yellow"))

p+geom_hline(yintercept = mean(lizards$weight), color="blue",linetype="dashed") +
  geom_vline(xintercept=100, color="red")+
  annotate("text", x=100,y=50,label="COOL",color="purple")+
  annotate("text", x=350,y=mean(lizards$weight)+2,label="mean weight")
```


```{r}
mono<-read_csv(here("data_tidy","mono.csv"))

ggplot(data=mono, aes(x=year,y=lake_level)) +
  geom_rect(aes(xmin=1941,
                xmax=1983,
                ymin=6350,
                ymax=6440),fill="gray90",alpha=0.1) +
  geom_line() +
  labs(x="Year",
                   y="Lake Surface Level\n(feet above sea level\n", 
                   title="Mono Lake (1850-2017)",
                   caption="Data: Mono Basin Clearinghouse")+
  scale_y_continuous(limit=c(6350,6440),
                     breaks=c(6370,6400,6430),
                     labels=scales::label_comma())+
  scale_x_continuous(limit=c(1850,2020),
                     breaks=seq(1850,2020,by=20),
                     expand=c(0,0))+
  geom_hline(yintercept=6360,linetype="dashed")+
  annotate("text",
           x=1910,y=6370,
           label="decreased shrimp abundance expected\n(6,360 feet above sea level)") +
  annotate("text",
           x=1962,
           y=6425,
           label= "unrestricted diversions\n(1941-1983)",
           size=3) +
  theme_minimal()
```

